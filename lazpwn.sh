#!/bin/bash
#made with love. for the lazy by the lazy
#reachable @ envs.stroud@gmail.com

#This sets up the 'usage' function which gives a message about usage then loops to main
function usage()
{	clear 2>/dev/null
	echo '############################'
	echo '#  __  _________  _________#'
	echo '# / / / / __/ _ |/ ___/ __/#'
	echo '#/ /_/ /\ \/ __ / (_ / _/  #'
	echo '#\____/___/_/ |_\___/___/  #'
	echo '############################'
	printf "\nDude, I'm so lazy
Maybe this will help someone
Who is lazy too\n\n"
read -p "Press any key to continue... " -n1 -s
clear 2>/dev/null

main
}

#This sets up the 'enumseries' function calls and uses the input and output functions then scans
function enumseries()
{	clear 2>/dev/null
confirm
clear 2>/dev/null
outfile 
clear 2>/dev/null
target_sel
clear 2>/dev/null
nmap -sU -sS -sC -T4 -oN $answerout $target 2
#padding blank lines to separate tool output
printf " \n\n\n" >> "$answerout"
printf "nbtscan results\n" >> "$answerout"
nbtscan "$target" >> "$answerout"
#padding blank lines to separate tool output
printf " \n\n\n" >> "$answerout"
printf "enum4linux results\n" >> "$answerout"
enum4linux $target | tee -a "$answerout" >/dev/null 2>&1
#add tools here ^^^
read -p "Scanning Done! Press any key to continue... " -n1 -s
main
}



####################################
###input and output Functions#######
####################################
function target_sel()
#This asks for a target. Unsanitary IP address is expected.
{	read -p 'Please enter the target ip : ' target
#I need to massage this and implement some sanitization, but, expand to include dns names. 
}
function confirm() 
#Asks to Continue, or loops back to main function 
{	while true; do
    read -p "1.This is about to flavor-blast your network.
	
2. This is going to take a long time
(read the output file for the truth)

3. You're gonna need snacks

Do you want to continue Y/n?" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) clear 2>/dev/null
				main;;
        * ) echo "Please answer yes or no.";;
    esac
done
}
function outfile()		
#This will create default location for results, and allow the user to change it. 
{	echo "Please provide a path to which the output will be saved."
#taken from stackoverflow.com/questions/4479987/suggest-answer-to-user-input-in-bash-scripting
	output=~/Desktop/lazpwn_results
	echo -e "Default location is [$output]: \c"
	read answerout
	[ -z "$answerout" ] && answerout=$output
	touch $answerout
}
#This sets up the 'Main' function
function main()
{	clear 2>/dev/null
	echo "###########################################"
	echo "#   __   _____  ______  ___ _      ___  __#"
	echo "#  / /  / _ \ \/ /_  / / _ \ | /| / / |/ /#"
	echo "# / /__/ __ |\  / / /_/ ___/ |/ |/ /    / #"
	echo "#/____/_/ |_|/_/ /___/_/   |__/|__/_/|_/  #"
	echo "###########################################"
	printf "\nAuto-Pentest Tool\n\n"
	
	PS3='Please enter your choice: '
	options=("Usage" "Let's GO!!!!" "Quit")
	select opt in "${options[@]}"
	do
		case $opt in
			"Usage")
				 usage
				;;
			"Let's GO!!!!")
				enumseries
				;;
			 "Quit") 
				break
				exit 1
				;;
			*) echo invalid option;;
		esac
	done
}

main